version: "3"

services:
    redis:
        image: redis:7.2-alpine
        ports:
            - $REDIS_PORT:$REDIS_PORT
        networks:
            - backend

    mongodb:
        image: mongo:5.0.2
        restart: unless-stopped
        ports:
            - $MONGO_PORT:$MONGO_PORT
        environment:
            - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
            - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
        volumes:
            - db:/data/db
        networks:
            - backend

    server:
        depends_on:
            - redis
            - mongodb
        build:
            context: ./server
        restart: unless-stopped
        ports:
            - $HOST_PORT:$SERVER_PORT
        environment:
            - SERVER_PORT=$SERVER_PORT
            - MONGODB_USER=$MONGODB_USER
            - MONGODB_PASSWORD=$MONGODB_PASSWORD
            - MONGODB_DATABASE=$MONGODB_DATABASE
            - MONGODB_HOST=$MONGODB_HOST
            - MONGO_PORT=$MONGO_PORT
            - JWT_SECRET=$JWT_SECRET
            - JWT_EXPIRES_IN=$JWT_EXPIRES_IN
            - COOKIE_SIGNATURE=$COOKIE_SIGNATURE
            - REDIS_PORT=$REDIS_PORT
            - REDIS_HOST=$REDIS_HOST
            - CLIENT_ORIGIN=$CLIENT_ORIGIN
        networks:
            - backend
            - frontend

    client:
        depends_on:
            - server
        build:
            context: ./client
        ports:
            - $CLIENT_LOCAL_PORT:$CLIENT_CONTAINER_PORT
        environment:
            - API_BASE_URL=$API_BASE_URL
        networks:
            - frontend

    # nginx:
    #     depends_on:
    #         - api
    #         - client
    #     restart: always
    #     build:
    #         context: ./nginx
    #     ports:
    #         - "3050:80"

volumes:
    db:

networks:
    backend:
    frontend:
